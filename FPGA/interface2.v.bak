module interface2(
	input i_Clock,
	input i_En,
	input [7:0] i_Request,
	input i_Rst,
	output [7:0] o_data_int,
	output [7:0] o_data_float,
	output o_done
	
);

	wire [7:0] 	w_Hum_Int, 
					w_Hum_Float, 
					w_Temp_Int, 
					w_Temp_Float,
					w_Crc;
					
	reg [7:0] r_data_int = 8'd0;
	reg [7:0] r_data_float = 8'd0;
	reg r_done = 1'b0;
	
	wire         dht_data_int  = 1'b0;
	wire         wait_int 		= 1'b0;
	wire         error_int 		= 1'b0;


//Definindo casos
localparam TEMP=8'b00000001, 
			  HUM=8'b00000010, 
			  ERR=8'b00000000;

dht11 ints_dht11 (
	.i_Clock(i_Clock),  
	.i_En(i_En),
	.i_Rst(i_Rst),	 
	.i_Dht_Data(dht_data_int),
	.o_Hum_Int(w_Hum_Int),
	.o_Hum_Float(w_Hum_Float),
	.o_Temp_Int(w_Temp_Int),
	.o_Temp_Float(w_Temp_Float),
	.o_Crc(i_Crc),
	.o_Wait(wait_int),
	.o_Error(error_int)
	
);

always @(posedge i_En) begin
		if (i_En == 1'b1) begin
			case(i_Request)
			TEMP	:  
			begin
				r_data_int <= w_Temp_Int;
				r_data_float <= w_Temp_Float;
				r_done <= 1'b1;
			end
			
			HUM	:
			begin
				r_data_int <= w_Hum_Int;
				r_data_float <= w_Hum_Float;
				r_done <= 1'b1;
			end
			
			
			endcase
		end 
		else begin
				r_data_int <= 8'd0;
				r_data_float <= 8'd0;
				r_done <= 1'b0;
		end
		r_done <= 1'b0;
	end
	
assign o_data_int = r_data_int;
assign o_data_float = r_data_float;
assign o_done = r_done;
endmodule
	