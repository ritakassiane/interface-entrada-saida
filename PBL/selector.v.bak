module selector (
	input i_Clock,
	input	i_Rst,
	input [7:0] i_Data,
	input i_Data_Done,
	output [7:0] o_address,
	output [7:0] o_request,
	output o_done
);

	wire [7:0] 	w_data_int, 
					w_data_float, 
					w_data_error;
					
reg [7:0] 		address		= 8'd0;
reg [7:0]		request		= 8'd0;
reg [1:0]		count			= 2'd0;
reg [31:0]		r_interface	= 31'd0;

assign o_address = address;
assign o_request = request;
assign o_done    = interface[0];

always @(posedge i_Clock) begin
		if (i_Data_Done == 1'b1)begin
			if (count == 2'b00)  begin
					address <= i_Data;
					count <= 2'b01;
					end
			 if (count == 2'b01) begin
					request <= i_Data;
					count <= 2'b00;
					if (address == 8'b00000001) begin
						r_interface[0] <= 1'b1;
					end
					else begin
						r_interface = 32'd0;
					end


			end

		end

end

interface2 i_dht11(
	.i_Clock(i_Clock),
	.i_En(interface[0]),
	.i_Request(request),
	.i_Rst(i_Rst),
	.o_data_int(w_data_int),
	.o_data_float(w_data_int),
	.o_data_error(w_data_error)
);
endmodule 